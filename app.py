from flask import Flask, request, jsonify, render_template
from flask_cors import CORS
import json
import random
from sentence_transformers import SentenceTransformer, util
import logging

logging.basicConfig(level=logging.INFO)

app = Flask(__name__, static_url_path='/static')
CORS(app)

# ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å JSON
with open("cars.json", "r", encoding="utf-8") as f:
    cars_data = json.load(f)

# ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° (‡πÉ‡∏ä‡πâ‡πÅ‡∏ö‡∏ö‡∏£‡∏±‡∏ô‡πÉ‡∏ô‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á)
model = SentenceTransformer("sentence-transformers/paraphrase-multilingual-MiniLM-L12-v2")

@app.route("/")
def index():
    return render_template("index.html")

@app.route("/chat", methods=["POST"])
def chat():
    try:
        data = request.get_json(force=True, silent=True)

        if not data or "message" not in data:
            logging.warning("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö message ‡πÉ‡∏ô request")
            return jsonify({"error": "‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°"}), 400

        user_input = data.get("message", "").strip()

        if not user_input:
            logging.warning("‚ùå ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡∏°‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡∏ß‡πà‡∏≤‡∏á")
            return jsonify({"response": "‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏õ‡πâ‡∏≠‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°"}), 400

        logging.info(f"üì© ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ: {user_input}")

        # ‚úÖ ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á
        relevant_car = search_car_data(user_input)

        # ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏à‡∏≠
        response = generate_text_response(user_input, relevant_car)

        logging.info(f"üì§ ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ: {response}")

        return jsonify({"response": response})

    except Exception as e:
        logging.error(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {str(e)}", exc_info=True)
        return jsonify({"error": "‚ö†Ô∏è ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå"}), 500

def search_car_data(query):
    """‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏ñ‡∏¢‡∏ô‡∏ï‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á"""
    query_embedding = model.encode(query, convert_to_tensor=True)
    car_texts = [car["‡∏£‡∏∏‡πà‡∏ô"] + " " + " ".join(car.get("aliases", [])) for car in cars_data]
    car_embeddings = model.encode(car_texts, convert_to_tensor=True)

    scores = util.pytorch_cos_sim(query_embedding, car_embeddings)[0]
    best_match_idx = scores.argmax().item()
    best_match_score = scores[best_match_idx].item()

    # ‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á
    if best_match_score < 0.6:
        return None

    return cars_data[best_match_idx]

def generate_text_response(user_input, car):

    if not car:
        return "‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏£‡∏ñ‡∏£‡∏∏‡πà‡∏ô‡∏ô‡∏µ‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡∏£‡∏∏‡πà‡∏ô‡∏≠‡∏∑‡πà‡∏ô"

    # ‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á
    model_name = car["‡∏£‡∏∏‡πà‡∏ô"]
    year = car.get("‡∏õ‡∏µ", "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏")
    acceleration = car["‡∏™‡∏°‡∏£‡∏£‡∏ñ‡∏ô‡∏∞"].get("‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡πÄ‡∏£‡πà‡∏á_0_100_‡∏Å‡∏°_‡∏ä‡∏°", "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏")
    top_speed = car["‡∏™‡∏°‡∏£‡∏£‡∏ñ‡∏ô‡∏∞"].get("‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î", "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏")
    drive_system = car.get("‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏±‡∏ö‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô", "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏")
    price_info = "\n".join([f"- {k}: {v}" for k, v in car["‡∏£‡∏≤‡∏Ñ‡∏≤"].items()])

    # ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ñ‡∏≤‡∏°‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏≠‡∏∞‡πÑ‡∏£
    if "‡∏£‡∏≤‡∏Ñ‡∏≤" in user_input:
        response_templates = [
            f"üí∞ {model_name} ‡∏õ‡∏µ {year} ‡∏°‡∏µ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ:\n{price_info}",
            f"üìå ‡∏£‡∏∏‡πà‡∏ô {model_name} ‡∏°‡∏µ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢‡∏ó‡∏µ‡πà:\n{price_info}",
            f"üõí ‡∏Ñ‡∏∏‡∏ì‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏ô‡πÉ‡∏à {model_name} ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ä‡πà‡πÑ‡∏´‡∏°? ‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≠‡∏á‡∏°‡∏±‡∏ô:\n{price_info}",
            f"üíµ ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö {model_name} ‡∏õ‡∏µ {year} ‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏Ñ‡∏≤‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î:\n{price_info}",
            f"üìä ‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≠‡∏á {model_name}:\n{price_info}",
            f"üîç ‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏≤‡∏°‡∏°‡∏≤‡∏û‡∏≠‡∏î‡∏µ! ‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤ {model_name}:\n{price_info}",
            f"üõ†Ô∏è ‡πÄ‡∏ä‡πá‡∏Ñ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≠‡∏á {model_name} ‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà:\n{price_info}",
            f"üè∑Ô∏è ‡∏≠‡∏¢‡∏≤‡∏Å‡∏£‡∏π‡πâ‡∏£‡∏≤‡∏Ñ‡∏≤‡πÉ‡∏ä‡πà‡πÑ‡∏´‡∏°? ‡∏ô‡∏µ‡πà‡πÄ‡∏•‡∏¢:\n{price_info}",
            f"‚úÖ ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≠‡∏á {model_name} ‡∏õ‡∏µ {year} ‡πÄ‡∏õ‡πá‡∏ô‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ:\n{price_info}",
            f"üßê ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≠‡∏á {model_name} ‡∏î‡∏π‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏•‡∏¢:\n{price_info}"
        ]
        return random.choice(response_templates)

    if "‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡πÄ‡∏£‡πà‡∏á" in user_input or "0-100" in user_input:
        response_templates = [
            f"üöÄ {model_name} ‡∏ó‡∏≥‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡πÄ‡∏£‡πà‡∏á 0-100 ‡∏Å‡∏°./‡∏ä‡∏°. ‡πÑ‡∏î‡πâ‡πÉ‡∏ô {acceleration}",
            f"üèéÔ∏è ‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡πÄ‡∏£‡πà‡∏á‡∏Ç‡∏≠‡∏á {model_name} ‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà {acceleration}",
            f"‚ö° {model_name} ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏£‡πà‡∏á 0-100 ‡∏Å‡∏°./‡∏ä‡∏°. ‡∏†‡∏≤‡∏¢‡πÉ‡∏ô {acceleration}",
            f"üö¶ ‡∏ñ‡πâ‡∏≤‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏≤‡∏Å‡∏£‡∏π‡πâ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß {model_name} ‡∏ó‡∏≥‡πÑ‡∏î‡πâ‡πÉ‡∏ô {acceleration}",
            f"üí® ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏ï‡πâ‡∏ô‡∏Ç‡∏≠‡∏á {model_name} ‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà {acceleration}",
            f"üèÅ ‡∏™‡∏ô‡πÉ‡∏à‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡πÄ‡∏£‡πà‡∏á‡πÉ‡∏ä‡πà‡πÑ‡∏´‡∏°? {model_name} ‡∏ó‡∏≥‡πÑ‡∏î‡πâ {acceleration}",
            f"üì¢ ‡∏Ç‡πà‡∏≤‡∏ß‡∏î‡∏µ! {model_name} ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏£‡πà‡∏á 0-100 ‡∏Å‡∏°./‡∏ä‡∏°. ‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà {acceleration}",
            f"üïê {model_name} ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏£‡πà‡∏á‡∏à‡∏≤‡∏Å 0-100 ‡∏Å‡∏°./‡∏ä‡∏°. ‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà {acceleration}",
            f"üî∞ ‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡πÄ‡∏£‡πà‡∏á‡∏Ç‡∏≠‡∏á {model_name} ‡∏Ñ‡∏∑‡∏≠ {acceleration}",
            f"üî• ‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏ñ‡∏∂‡∏á‡∏û‡∏•‡∏±‡∏á‡∏Ç‡∏≠‡∏á {model_name} ‡∏ó‡∏µ‡πà {acceleration}"
        ]
        return random.choice(response_templates)

    if "‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î" in user_input:
        response_templates = [
            f"üèéÔ∏è {model_name} ‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡πÑ‡∏î‡πâ {top_speed} ‡∏Å‡∏°./‡∏ä‡∏°.",
            f"üöÄ ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á {model_name} ‡∏Ñ‡∏∑‡∏≠ {top_speed} ‡∏Å‡∏°./‡∏ä‡∏°.",
            f"üì¢ ‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏≤‡∏°‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡πÉ‡∏ä‡πà‡πÑ‡∏´‡∏°? {model_name} ‡πÑ‡∏õ‡πÑ‡∏î‡πâ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡∏ó‡∏µ‡πà {top_speed} ‡∏Å‡∏°./‡∏ä‡∏°.",
            f"üî• {model_name} ‡∏ñ‡∏π‡∏Å‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡πÉ‡∏´‡πâ‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡πÑ‡∏î‡πâ‡∏ñ‡∏∂‡∏á {top_speed} ‡∏Å‡∏°./‡∏ä‡∏°.",
            f"‚ö° ‡∏î‡πâ‡∏ß‡∏¢‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î {model_name} ‡πÑ‡∏õ‡πÑ‡∏î‡πâ‡∏ñ‡∏∂‡∏á {top_speed} ‡∏Å‡∏°./‡∏ä‡∏°.",
            f"üèÅ ‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡∏™‡∏±‡∏°‡∏ú‡∏±‡∏™‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏ó‡∏µ‡πà {top_speed} ‡∏Å‡∏°./‡∏ä‡∏°. ‡∏Å‡∏±‡∏ö {model_name}",
            f"üî∞ {model_name} ‡∏ß‡∏¥‡πà‡∏á‡πÄ‡∏£‡πá‡∏ß‡∏™‡∏∏‡∏î‡∏ó‡∏µ‡πà {top_speed} ‡∏Å‡∏°./‡∏ä‡∏°.",
            f"üéØ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏ö‡∏≠‡∏Å‡∏ß‡πà‡∏≤ {model_name} ‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡∏ó‡∏µ‡πà {top_speed} ‡∏Å‡∏°./‡∏ä‡∏°.",
            f"üßê ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á {model_name} ‡∏Ñ‡∏∑‡∏≠ {top_speed} ‡∏Å‡∏°./‡∏ä‡∏°.",
            f"üö¶ ‡∏Ç‡∏±‡∏ö‡∏Ç‡∏µ‡πà‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à {model_name} ‡∏ß‡∏¥‡πà‡∏á‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡∏ó‡∏µ‡πà {top_speed} ‡∏Å‡∏°./‡∏ä‡∏°."
        ]
        return random.choice(response_templates)

    if "‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏±‡∏ö‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô" in user_input:
        response_templates = [
            f"üõû ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏±‡∏ö‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏Ç‡∏≠‡∏á {model_name} ‡∏Ñ‡∏∑‡∏≠ {drive_system}",
            f"‚öôÔ∏è {model_name} ‡πÉ‡∏ä‡πâ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏±‡∏ö‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÅ‡∏ö‡∏ö {drive_system}",
            f"üîç ‡∏Ñ‡∏∏‡∏ì‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏ô‡πÉ‡∏à‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏±‡∏ö‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏Ç‡∏≠‡∏á {model_name} ‡πÉ‡∏ä‡πà‡πÑ‡∏´‡∏°? ‡∏°‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏ö‡∏ö {drive_system}",
            f"üîß {model_name} ‡∏Ç‡∏±‡∏ö‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏£‡∏∞‡∏ö‡∏ö {drive_system}",
            f"üì¢ ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏±‡∏ö‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏Ç‡∏≠‡∏á {model_name} ‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏°‡∏≤‡πÄ‡∏õ‡πá‡∏ô {drive_system}",
            f"üèéÔ∏è ‡∏´‡∏≤‡∏Å‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏≤‡∏Å‡∏£‡∏π‡πâ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏Ç‡∏±‡∏ö‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô {model_name} ‡πÉ‡∏ä‡πâ {drive_system}",
            f"üõ†Ô∏è ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏±‡∏ö‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏Ç‡∏≠‡∏á {model_name} ‡∏Ñ‡∏∑‡∏≠ {drive_system}",
            f"üìå {model_name} ‡∏°‡∏≤‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏±‡∏ö‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô {drive_system}",
            f"üßê ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏±‡∏ö‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÉ‡∏ô {model_name} ‡∏Ñ‡∏∑‡∏≠ {drive_system}",
            f"üöó {model_name} ‡πÉ‡∏ä‡πâ‡∏£‡∏∞‡∏ö‡∏ö {drive_system} ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏Å‡∏≤‡∏£‡∏Ç‡∏±‡∏ö‡∏Ç‡∏µ‡πà‡∏î‡∏µ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î"
        ]
        return random.choice(response_templates)

    # ‚úÖ ‡∏ñ‡πâ‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ñ‡∏≤‡∏°‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏à‡∏≤‡∏∞‡∏à‡∏á ‡∏ï‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ
    response_templates = [
        f"üöó {model_name} ‡∏õ‡∏µ {year} ‡∏°‡∏µ‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡πÄ‡∏£‡πà‡∏á 0-100 ‡∏Å‡∏°./‡∏ä‡∏°. ‡∏ó‡∏µ‡πà {acceleration} ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î {top_speed} ‡∏Å‡∏°./‡∏ä‡∏°. ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏±‡∏ö‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô: {drive_system} üí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤:\n{price_info}",
        f"üìå {model_name} ‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏ñ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡∏¥‡∏¢‡∏°‡πÉ‡∏ô‡∏õ‡∏µ {year} ‡∏°‡∏µ‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡πÄ‡∏£‡πà‡∏á 0-100 ‡∏Å‡∏°./‡∏ä‡∏°. ‡∏ó‡∏µ‡πà {acceleration} ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î {top_speed} ‡∏Å‡∏°./‡∏ä‡∏°.",
        f"üõ†Ô∏è ‡∏ñ‡πâ‡∏≤‡∏Ñ‡∏∏‡∏ì‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏°‡∏≠‡∏á‡∏´‡∏≤‡∏£‡∏ñ {model_name} ‡∏õ‡∏µ {year} ‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏ó‡∏µ‡πà‡∏ô‡πà‡∏≤‡∏™‡∏ô‡πÉ‡∏à:\n- ‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡πÄ‡∏£‡πà‡∏á 0-100 ‡∏Å‡∏°./‡∏ä‡∏°.: {acceleration}\n- ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î: {top_speed}\n- ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏±‡∏ö‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô: {drive_system}\n- üí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤:\n{price_info}",
        f"üèÅ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á {model_name} ‡∏õ‡∏µ {year}:\n- ‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡πÄ‡∏£‡πà‡∏á: {acceleration}\n- ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î: {top_speed}\n- ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏±‡∏ö‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô: {drive_system}\nüí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤:\n{price_info}",
        f"üßê {model_name} ‡∏õ‡∏µ {year} ‡∏°‡∏≤‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ö‡∏™‡∏°‡∏£‡∏£‡∏ñ‡∏ô‡∏∞‡∏ó‡∏µ‡πà‡∏¢‡∏≠‡∏î‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°! ‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡πÄ‡∏£‡πà‡∏á {acceleration}, ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î {top_speed} ‡∏Å‡∏°./‡∏ä‡∏°.",
        f"üéØ ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ç‡∏≠‡∏á {model_name} ‡∏õ‡∏µ {year}: ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏±‡∏ö‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô {drive_system}, ‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡πÄ‡∏£‡πà‡∏á {acceleration}, ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î {top_speed} ‡∏Å‡∏°./‡∏ä‡∏°.",
        f"üì¢ ‡∏™‡∏ô‡πÉ‡∏à {model_name} ‡πÉ‡∏ä‡πà‡πÑ‡∏´‡∏°? ‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î:\n- ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î {top_speed} ‡∏Å‡∏°./‡∏ä‡∏°.\n- ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏±‡∏ö‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô {drive_system}\nüí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤:\n{price_info}",
        f"üîß {model_name} ‡∏õ‡∏µ {year} ‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏ñ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏™‡∏°‡∏£‡∏£‡∏ñ‡∏ô‡∏∞‡∏î‡∏µ‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°! ‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ó‡∏µ‡πà:\n{price_info}",
        f"üõí ‡∏™‡∏ô‡πÉ‡∏à‡∏ã‡∏∑‡πâ‡∏≠ {model_name} ‡∏õ‡∏µ {year} ‡πÑ‡∏´‡∏°? ‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏°‡∏±‡∏ô:\n- ‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡πÄ‡∏£‡πà‡∏á {acceleration}\n- ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏±‡∏ö‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô {drive_system}",
        f"üìå {model_name} ‡∏õ‡∏µ {year} ‡∏°‡∏µ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏µ‡πà‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô‡πÑ‡∏î‡πâ ‡πÇ‡∏î‡∏¢‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏£‡∏£‡∏ñ‡∏ô‡∏∞‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ:\n- ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î {top_speed}\n- ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏±‡∏ö‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô {drive_system}"
    ]
    
    return random.choice(response_templates)

if __name__ == "__main__":
    app.run(debug=True, host="0.0.0.0", port=5000)
